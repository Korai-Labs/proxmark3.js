!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("lodash")):"function"==typeof define&&define.amd?define(["exports","lodash"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).Proxmark3={},t._)}(this,(function(t,e){"use strict";function r(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var i=r(e);class n extends Uint8Array{constructor(...t){super(...t),this.dv=new DataView(this.buffer,this.byteOffset,this.byteLength)}static fromView(t){if(!ArrayBuffer.isView(t))throw new TypeError("invalid view");return new n(t.buffer,t.byteOffset,t.byteLength)}static fromHex(t){return new n(i.default.map(t.match(/.{2}/g),(t=>i.default.parseInt(t,16))))}static fromUtf8(t){return n.fromView((new TextEncoder).encode(t))}static merge(...t){if(t.length<2)return t.length?t[0]:new n;const e=i.default.sumBy(t,"byteLength"),r=new n(e);return i.default.reduce(t,((t,e)=>(r.set(e,t),t+e.byteLength)),0),r}get hex(){return i.default.map(this,(t=>`0${t.toString(16)}`.slice(-2))).join("")}get utf8(){return(new TextDecoder).decode(this)}dvGetter(t,e,r=!0){return e<0&&(e+=this.dv.byteLength),this.dv[t](e,r)}getBigInt64(...t){return this.dvGetter("getBigInt64",...t)}getBigUint64(...t){return this.dvGetter("getBigUint64",...t)}getFloat32(...t){return this.dvGetter("getFloat32",...t)}getFloat64(...t){return this.dvGetter("getFloat64",...t)}getInt16(...t){return this.dvGetter("getInt16",...t)}getInt32(...t){return this.dvGetter("getInt32",...t)}getInt8(...t){return this.dvGetter("getInt8",...t)}getUint16(...t){return this.dvGetter("getUint16",...t)}getUint32(...t){return this.dvGetter("getUint32",...t)}getUint8(...t){return this.dvGetter("getUint8",...t)}dvSetter(t,e,r,i=!0){return e<0&&(e+=this.dv.byteLength),this.dv[t](e,r,i)}setBigInt64(...t){return this.dvSetter("setBigInt64",...t)}setBigUint64(...t){return this.dvSetter("setBigUint64",...t)}setFloat32(...t){return this.dvSetter("setFloat32",...t)}setFloat64(...t){return this.dvSetter("setFloat64",...t)}setInt16(...t){return this.dvSetter("setInt16",...t)}setInt32(...t){return this.dvSetter("setInt32",...t)}setInt8(...t){return this.dvSetter("setInt8",...t)}setUint16(...t){return this.dvSetter("setUint16",...t)}setUint32(...t){return this.dvSetter("setUint32",...t)}setUint8(...t){return this.dvSetter("setUint8",...t)}}const s=(...t)=>console.log(`[${(new Date).toTimeString().slice(0,8)}]`,...t),a=t=>new Promise((e=>setTimeout(e,t))),o=(t,e)=>i.default.padStart(t.toString(16),e,"0");class d{constructor(t){if(!(t&&t instanceof n))throw new TypeError("invalid buf");this.buf=t,this.data=t.subarray(10+(this.ng?0:24),t.byteLength-2)}get len(){return this.buf.byteLength}get ng(){return(128&this.buf.getUint8(5))>0}get status(){return this.buf.getInt16(6)}get cmd(){return this.buf.getUint16(8)}get crc(){return this.buf.getUint16(this.buf.byteLength-2)}getArg(t){return this.buf.getBigUint64(10+(t<<3))}}class u{constructor(t){if(!(t&&t instanceof n))throw new TypeError("invalid buf");this.buf=t,this.data=t.subarray(32)}get cmd(){return Number(BigInt.asUintN(16,this.buf.getBigUint64(0)))}getArg(t){return this.buf.getBigUint64(8+(t<<3))}}class h{constructor(t){this.filters=t,this.port=null,this.reader=null}static isSupported(){return"serial"in navigator}async requestPort(){if(!h.isSupported())throw new Error("不支援 WebSerial");this.port=await navigator.serial.requestPort({filters:this.filters}),await this.port.open({baudRate:9600})}async ensurePortOpen(){this.port||await this.requestPort(this.filters)}async read(){if(await this.ensurePortOpen(),!this.reader){for(let t=0;t<100&&!this.port.readable;t++){if(99===t)throw new Error("SerialPort is not readable");await a(10)}this.reader=this.port.readable.getReader()}if(!this.reader)throw new Error("Failed to getReader");const{value:t,done:e}=await this.reader.read();return e&&(this.reader.releaseLock(),this.reader=null),n.fromView(t)}async write(t){if(!(t instanceof n))throw new TypeError("data should be BufferLE");s(`write ${t.byteLength} bytes`,t),await this.ensurePortOpen();for(let t=0;t<100&&!this.port.writable;t++){if(99===t)throw new Error("SerialPort is not writable");await a(10)}const e=this.port.writable.getWriter();if(!e)throw new Error("Failed to getWriter");await e.write(t),e.releaseLock()}}const f=255,c=901,l=1568,g=1569,w=65535,b=278;var y=new class{constructor(){this.serial=new h([{usbVendorId:11565,usbProductId:20557},{usbVendorId:39620,usbProductId:19343},{usbVendorId:7531,usbProductId:262}])}async sendCommandNG({cmd:t,data:e=null,ng:r=!0}){if(e&&!(e instanceof n))throw new TypeError("data should be BufferLE");const i=e?.byteLength??0;if(i>512)throw new TypeError("data.byteLength > 512");const s=new n(i+10);s.set(n.fromUtf8("PM3a")),s.setUint16(4,i+(r?32768:0)),s.setUint16(6,Number(BigInt.asUintN(16,BigInt(t)))),i&&s.set(e,8),s.set(n.fromUtf8("a3"),i+8),await this.serial.write(s)}async sendCommandMix({cmd:t,arg:e=[],data:r=null}){if(r&&!(r instanceof n))throw new TypeError("data should be BufferLE");const i=r?.byteLength??0;if(i>488)throw new TypeError("data.byteLength > 488");const s=new n(i+24);i&&s.set(r,24);for(let t=0;t<3;t++){if(e[t]=e[t]??0n,"bigint"!=typeof e[t])throw new TypeError(`arg${t+1} should be BigInt`);s.setBigUint64(t<<3,e[t])}return await this.sendCommandNG({cmd:t,data:s,ng:!1})}clearSerialReadBuffer(){this.serialReadBuffer||(this.serialReadBuffer={});const t=this.serialReadBuffer;t.chunks=[],t.len=0}async readBytes(t){if(!i.default.isSafeInteger(t)||t<1)throw new TypeError(`invalid len = ${t}`);this.serialReadBuffer||this.clearSerialReadBuffer();const e=this.serialReadBuffer;for(;e.len<t;){const t=await this.serial.read();e.chunks.push(t),e.len+=t.byteLength}const r=n.merge(...e.chunks),s=r.slice(0,t);return e.len=r.byteLength-t,e.chunks=e.len>0?[r.slice(t)]:[],s}async readResp(){const t=await this.readBytes(10),e=1647529296===t.getUint32(0)?new d(n.merge(t,await this.readBytes(2+(32767&t.getUint16(4))))):new u(n.merge(t,await this.readBytes(534)));return s("readResp",e),e}async waitRespTimeout(t,e=2500){await this.serial.ensurePortOpen(),e+=100;const r={startedAt:Date.now(),finished:0};try{return await Promise.race([(async()=>{for(;!r.finished;){const r=await this.readResp();if(t===w||r.cmd===t)return r;if(r.cmd===b&&2===r.data.byteLength){const t=r.data.getUint16(0);t<65535&&(s(`waiting time extend: ${e} + ${t} = ${e+t} ms`),e+=t)}}})(),(async()=>{if(e<0)return new Promise((t=>{}));for(;!r.finished;){const t=r.startedAt+e-Date.now();if(t<0)throw new Error(`waitRespTimeout ${e}ms`);await a(t)}})()])}finally{r.finished=1}}};class p{constructor(t){if(!t||!(t instanceof n)||t.byteLength<15)throw new TypeError("invalid buf");this.buf=t,this.uid=t.subarray(0,t.getUint8(10)),this.ats=t.subarray(15,15+t.getUint8(14))}get atqa(){return this.buf.getUint16(11)}get sak(){return this.buf.getUint8(13)}}t.BufferLE=n,t.HF14A=class{constructor(){this.adapter=y}async CmdDisconnect(){await this.adapter.sendCommandMix({cmd:c})}async CmdInfo(t=!1){try{this.adapter.clearSerialReadBuffer(),await this.adapter.sendCommandMix({cmd:c,arg:[0b11n]});const e=await this.adapter.waitRespTimeout(f),r=Number(e.getArg(0)),i=new p(e.data);if(0===r){if(t)throw new Error("failed to select iso14443a card");return}if(3===r)throw new Error(`Card doesn't support standard iso14443-3 anticollision, ATQA: ${o(i.atqa,4)}`);return{uid:i.uid.hex,atqa:o(i.atqa,4),sak:o(i.sak,2),status:r}}catch(t){throw console.error(t),t}finally{this.serial?.port?.writable&&await this.CmdHF14ADisconnect()}}async CmdMfRdBl(t,e,r){if(!(r instanceof n))throw new TypeError("key should be BufferLE");if(6!==r.byteLength)throw new TypeError("invalid key");const i=new n(8);i.setUint8(0,t),i.setUint8(1,e),i.set(r,2),this.adapter.clearSerialReadBuffer(),await this.adapter.sendCommandNG({cmd:l,data:i});const s=await this.adapter.waitRespTimeout(l);if(s.status)throw new Error("Failed to read block");return s.data}async CmdMfRdSc(t,e,r){if(!(r instanceof n))throw new TypeError("key should be BufferLE");if(6!==r.byteLength)throw new TypeError("invalid key");this.adapter.clearSerialReadBuffer(),await this.adapter.sendCommandMix({cmd:g,arg:[BigInt(t),BigInt(e)],data:r});const i=await this.adapter.waitRespTimeout(f);if(!(255&Number(i.getArg(0))))throw new Error("Failed to read block");return i.data.slice(0,64)}},t.WebSerial=h,t.version="0.1.0",Object.defineProperty(t,"__esModule",{value:!0})}));
